//! SeaORM Entity. Generated by sea-orm-codegen 0.7.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "sys_auto_code_histories")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u64,
    pub created_at: Option<DateTime>,
    pub updated_at: Option<DateTime>,
    pub deleted_at: Option<DateTime>,
    pub table_name: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub request_meta: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub auto_code_path: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub injection_meta: Option<String>,
    pub struct_name: Option<String>,
    pub struct_cn_name: Option<String>,
    pub api_ids: Option<String>,
    pub flag: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
