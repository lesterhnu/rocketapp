//! SeaORM Entity. Generated by sea-orm-codegen 0.7.0

use sea_orm::entity::prelude::*;
use sea_orm::entity::prelude::DeriveEntityModel;
#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "posts")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub title: String,
    pub text: String,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}

// async fn test()->String{
//     let db: DatabaseConnection = Database::connect("mysql://root:123456@localhost/koutu")
//         .await
//         .unwrap();
//     let post = Entity::find_by_id(1).one(&db).await.unwrap().unwrap();
//     println!("{:?}", post.id);
//     // Flash::success(Redirect::to("/h2/h2"), "config insert success")
//     "success".to_string()
// }